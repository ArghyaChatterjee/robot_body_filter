# This is an example filter config for tracked vehicle Jasmine from TU Darmstadt's Team Hector
# with a rotating lidar Velodyne VLP-16.
# It configures 4 instances of RobotBodyFilter - 2 for containment filtering, 2 for shadow
# filtering. The reason for having 4 different instances is the need to apply different values
# of body_model/inflation/scale and body_model/inflation/padding. Each instance acts on different
# sets of links specified in the `only_links` parameter.
cloud_filter_chain:
  # Only containment filtering
  - name: robot_body_filter_containment
    type: robot_body_filter/RobotBodyFilterPointCloud2
    params:
      debug/pcl/clip: false
      debug/pcl/inside: false
      debug/pcl/shadow: false
      sensor/point_by_point: false
      sensor/min_distance: 0.05
      sensor/max_distance: 10
      frames/sensor: rslidar
      frames/filtering: rslidar
      frames/output: rslidar
      frames/fixed: odom
      body_model/inflation/scale: 1.0
      body_model/inflation/padding: 0.03
      body_model/robot_description_param: smb_description
      filter/do_clipping: true
      filter/do_contains_test: true
      filter/do_shadow_test: false
      only_links:
        - base_link
        - gps_link
        - imu_link
        - lidar_mount_link
        - top
  # Containment filtering for gripper with more padding (cables, higher uncertainty)
  # - name: robot_body_filter_containment_gripper
  #   type: robot_body_filter/RobotBodyFilterPointCloud2
  #   params:
  #     debug/pcl/clip: false
  #     debug/pcl/inside: true
  #     debug/pcl/shadow: false
  #     sensor/point_by_point: false
  #     sensor/min_distance: 0.15
  #     sensor/max_distance: 0
  #     frames/sensor: rslidar
  #     frames/filtering: rslidar
  #     frames/output: rslidar
  #     frames/fixed: odom
  #     body_model/inflation/scale: 1.0
  #     body_model/inflation/padding: 0.1
  #     body_model/robot_description_param: /robot_description
  #     filter/do_clipping: false
  #     filter/do_contains_test: true
  #     filter/do_shadow_test: false
  #     only_links:
  #       - base_link
  #       - gps_link
  #       - imu_link
  #       - lidar_mount_link
  #       - top
  # # Raycast filter for arm and sensor head
  # - name: robot_body_filter_shadow
  #   type: robot_body_filter/RobotBodyFilterPointCloud2
  #   params:
  #     debug/pcl/clip: false
  #     debug/pcl/inside: false
  #     debug/pcl/shadow: true
  #     sensor/point_by_point: false
  #     sensor/min_distance: 0.15
  #     sensor/max_distance: 0
  #     frames/sensor: rslidar
  #     frames/filtering: rslidar
  #     frames/output: rslidar
  #     frames/fixed: odom
  #     body_model/inflation/scale: 1.0
  #     body_model/inflation/padding: 0.01
  #     body_model/robot_description_param: /robot_description
  #     filter/do_clipping: false
  #     filter/do_contains_test: false
  #     filter/do_shadow_test: true
  #     only_links:
  #       - base_link
  #       - gps_link
  #       - imu_link
  #       - lidar_mount_link
  #       - top
  # # Raycast filter for chassis and gripper fingers with more padding
  # - name: robot_body_filter_shadow_chassis
  #   type: robot_body_filter/RobotBodyFilterPointCloud2
  #   params:
  #     debug/pcl/clip: false
  #     debug/pcl/inside: false
  #     debug/pcl/shadow: false
  #     sensor/point_by_point: false
  #     sensor/min_distance: 0.15
  #     sensor/max_distance: 0
  #     frames/sensor: rslidar
  #     frames/filtering: rslidar
  #     frames/output: rslidar
  #     frames/fixed: odom
  #     body_model/inflation/scale: 1.0
  #     body_model/inflation/padding: 0.02
  #     body_model/robot_description_param: /robot_description
  #     filter/do_clipping: false
  #     filter/do_contains_test: false
  #     filter/do_shadow_test: true
  #     only_links:
  #       - base_link
  #       - gps_link
  #       - imu_link
  #       - lidar_mount_link
  #       - top
